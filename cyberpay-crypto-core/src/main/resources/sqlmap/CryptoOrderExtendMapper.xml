<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cyberpay.crypto.mapper.CryptoOrderExtendMapper">
  <resultMap id="BaseResultMap" type="org.cyberpay.crypto.model.CryptoOrderExtend">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="biz_flow_no" jdbcType="VARCHAR" property="bizFlowNo" />
    <result column="payment_address" jdbcType="VARCHAR" property="paymentAddress" />
    <result column="real_receive_amount" jdbcType="DECIMAL" property="realReceiveAmount" />
    <result column="real_exchange_rate" jdbcType="DECIMAL" property="realExchangeRate" />
    <result column="order_exchange_rate" jdbcType="DECIMAL" property="orderExchangeRate" />
    <result column="block_hash" jdbcType="VARCHAR" property="blockHash" />
    <result column="trans_hash" jdbcType="VARCHAR" property="transHash" />
    <result column="block_number" jdbcType="BIGINT" property="blockNumber" />
    <result column="confirm" jdbcType="BIGINT" property="confirm" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, biz_flow_no, payment_address, real_receive_amount, real_exchange_rate, order_exchange_rate, 
    block_hash, trans_hash, block_number, confirm, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from crypto_order_extend
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from crypto_order_extend
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.cyberpay.crypto.model.CryptoOrderExtend" useGeneratedKeys="true">
    insert into crypto_order_extend (biz_flow_no, payment_address, real_receive_amount, 
      real_exchange_rate, order_exchange_rate, block_hash, 
      trans_hash, block_number, confirm, 
      create_time, update_time)
    values (#{bizFlowNo,jdbcType=VARCHAR}, #{paymentAddress,jdbcType=VARCHAR}, #{realReceiveAmount,jdbcType=DECIMAL}, 
      #{realExchangeRate,jdbcType=DECIMAL}, #{orderExchangeRate,jdbcType=DECIMAL}, #{blockHash,jdbcType=VARCHAR}, 
      #{transHash,jdbcType=VARCHAR}, #{blockNumber,jdbcType=BIGINT}, #{confirm,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.cyberpay.crypto.model.CryptoOrderExtend" useGeneratedKeys="true">
    insert into crypto_order_extend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bizFlowNo != null">
        biz_flow_no,
      </if>
      <if test="paymentAddress != null">
        payment_address,
      </if>
      <if test="realReceiveAmount != null">
        real_receive_amount,
      </if>
      <if test="realExchangeRate != null">
        real_exchange_rate,
      </if>
      <if test="orderExchangeRate != null">
        order_exchange_rate,
      </if>
      <if test="blockHash != null">
        block_hash,
      </if>
      <if test="transHash != null">
        trans_hash,
      </if>
      <if test="blockNumber != null">
        block_number,
      </if>
      <if test="confirm != null">
        confirm,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bizFlowNo != null">
        #{bizFlowNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentAddress != null">
        #{paymentAddress,jdbcType=VARCHAR},
      </if>
      <if test="realReceiveAmount != null">
        #{realReceiveAmount,jdbcType=DECIMAL},
      </if>
      <if test="realExchangeRate != null">
        #{realExchangeRate,jdbcType=DECIMAL},
      </if>
      <if test="orderExchangeRate != null">
        #{orderExchangeRate,jdbcType=DECIMAL},
      </if>
      <if test="blockHash != null">
        #{blockHash,jdbcType=VARCHAR},
      </if>
      <if test="transHash != null">
        #{transHash,jdbcType=VARCHAR},
      </if>
      <if test="blockNumber != null">
        #{blockNumber,jdbcType=BIGINT},
      </if>
      <if test="confirm != null">
        #{confirm,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cyberpay.crypto.model.CryptoOrderExtend">
    update crypto_order_extend
    <set>
      <if test="bizFlowNo != null">
        biz_flow_no = #{bizFlowNo,jdbcType=VARCHAR},
      </if>
      <if test="paymentAddress != null">
        payment_address = #{paymentAddress,jdbcType=VARCHAR},
      </if>
      <if test="realReceiveAmount != null">
        real_receive_amount = #{realReceiveAmount,jdbcType=DECIMAL},
      </if>
      <if test="realExchangeRate != null">
        real_exchange_rate = #{realExchangeRate,jdbcType=DECIMAL},
      </if>
      <if test="orderExchangeRate != null">
        order_exchange_rate = #{orderExchangeRate,jdbcType=DECIMAL},
      </if>
      <if test="blockHash != null">
        block_hash = #{blockHash,jdbcType=VARCHAR},
      </if>
      <if test="transHash != null">
        trans_hash = #{transHash,jdbcType=VARCHAR},
      </if>
      <if test="blockNumber != null">
        block_number = #{blockNumber,jdbcType=BIGINT},
      </if>
      <if test="confirm != null">
        confirm = #{confirm,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cyberpay.crypto.model.CryptoOrderExtend">
    update crypto_order_extend
    set biz_flow_no = #{bizFlowNo,jdbcType=VARCHAR},
      payment_address = #{paymentAddress,jdbcType=VARCHAR},
      real_receive_amount = #{realReceiveAmount,jdbcType=DECIMAL},
      real_exchange_rate = #{realExchangeRate,jdbcType=DECIMAL},
      order_exchange_rate = #{orderExchangeRate,jdbcType=DECIMAL},
      block_hash = #{blockHash,jdbcType=VARCHAR},
      trans_hash = #{transHash,jdbcType=VARCHAR},
      block_number = #{blockNumber,jdbcType=BIGINT},
      confirm = #{confirm,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findCryptoOrderExtend" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
    from crypto_order_extend where biz_flow_no = #{bizFlowNo,jdbcType=VARCHAR}
  </select>

  <select id="updateCryptoOrderExtendByBizFlowNo"  parameterType="org.cyberpay.crypto.model.CryptoOrderExtend">
    update crypto_order_extend
    set payment_address = #{paymentAddress,jdbcType=VARCHAR},
        real_receive_amount = #{realReceiveAmount,jdbcType=DECIMAL},
        real_exchange_rate = #{realExchangeRate,jdbcType=DECIMAL},
        order_exchange_rate = #{orderExchangeRate,jdbcType=DECIMAL},
        block_hash = #{blockHash,jdbcType=VARCHAR},
        trans_hash = #{transHash,jdbcType=VARCHAR},
        block_number = #{blockNumber,jdbcType=BIGINT},
        confirm = #{confirm,jdbcType=BIGINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where biz_flow_no = #{bizFlowNo,jdbcType=VARCHAR}
  </select>

  <!-- 未确认订单扩展数据 -->
  <select id="findUnconfirmedOrderExtend" resultMap="BaseResultMap" >
    select
      coe.id, coe.biz_flow_no, coe.payment_address, coe.real_receive_amount, coe.real_exchange_rate, coe.order_exchange_rate,
      coe.block_hash, coe.trans_hash, coe.block_number, coe.confirm, coe.create_time, coe.update_time
    from
         crypto_order_extend coe
        left join
        crypto_order co on(coe.biz_flow_no = co.biz_flow_no)
     where
        co.receive_network_code = #{networkCode,jdbcType=VARCHAR}
     and
        co.receive_coin = #{coin,jdbcType=VARCHAR}
     and
        co.status = 'unconfirmed'
  </select>

</mapper>