<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cyberpay.crypto.mapper.CryptoNodeMappingMapper">
  <resultMap id="BaseResultMap" type="org.cyberpay.crypto.model.CryptoNodeMapping">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="crypto_symbol" jdbcType="VARCHAR" property="cryptoSymbol" />
    <result column="crypto_type" jdbcType="VARCHAR" property="cryptoType" />
    <result column="network_name" jdbcType="VARCHAR" property="networkName" />
    <result column="network_code" jdbcType="VARCHAR" property="networkCode" />
    <result column="node_interface_name" jdbcType="VARCHAR" property="nodeInterfaceName" />
    <result column="block_confirm" jdbcType="BIGINT" property="blockConfirm" />
    <result column="generate_address_number" jdbcType="BIGINT" property="generateAddressNumber" />
    <result column="extend" jdbcType="VARCHAR" property="extend" />
    <result column="extend2" jdbcType="VARCHAR" property="extend2" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, crypto_symbol, crypto_type, network_name, network_code, node_interface_name, 
    block_confirm, generate_address_number, extend, extend2, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from crypto_node_mapping
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from crypto_node_mapping
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.cyberpay.crypto.model.CryptoNodeMapping" useGeneratedKeys="true">
    insert into crypto_node_mapping (crypto_symbol, crypto_type, network_name, 
      network_code, node_interface_name, block_confirm, 
      generate_address_number, extend, extend2, 
      create_time, update_time)
    values (#{cryptoSymbol,jdbcType=VARCHAR}, #{cryptoType,jdbcType=VARCHAR}, #{networkName,jdbcType=VARCHAR}, 
      #{networkCode,jdbcType=VARCHAR}, #{nodeInterfaceName,jdbcType=VARCHAR}, #{blockConfirm,jdbcType=BIGINT}, 
      #{generateAddressNumber,jdbcType=BIGINT}, #{extend,jdbcType=VARCHAR}, #{extend2,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.cyberpay.crypto.model.CryptoNodeMapping" useGeneratedKeys="true">
    insert into crypto_node_mapping
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cryptoSymbol != null">
        crypto_symbol,
      </if>
      <if test="cryptoType != null">
        crypto_type,
      </if>
      <if test="networkName != null">
        network_name,
      </if>
      <if test="networkCode != null">
        network_code,
      </if>
      <if test="nodeInterfaceName != null">
        node_interface_name,
      </if>
      <if test="blockConfirm != null">
        block_confirm,
      </if>
      <if test="generateAddressNumber != null">
        generate_address_number,
      </if>
      <if test="extend != null">
        extend,
      </if>
      <if test="extend2 != null">
        extend2,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cryptoSymbol != null">
        #{cryptoSymbol,jdbcType=VARCHAR},
      </if>
      <if test="cryptoType != null">
        #{cryptoType,jdbcType=VARCHAR},
      </if>
      <if test="networkName != null">
        #{networkName,jdbcType=VARCHAR},
      </if>
      <if test="networkCode != null">
        #{networkCode,jdbcType=VARCHAR},
      </if>
      <if test="nodeInterfaceName != null">
        #{nodeInterfaceName,jdbcType=VARCHAR},
      </if>
      <if test="blockConfirm != null">
        #{blockConfirm,jdbcType=BIGINT},
      </if>
      <if test="generateAddressNumber != null">
        #{generateAddressNumber,jdbcType=BIGINT},
      </if>
      <if test="extend != null">
        #{extend,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.cyberpay.crypto.model.CryptoNodeMapping">
    update crypto_node_mapping
    <set>
      <if test="cryptoSymbol != null">
        crypto_symbol = #{cryptoSymbol,jdbcType=VARCHAR},
      </if>
      <if test="cryptoType != null">
        crypto_type = #{cryptoType,jdbcType=VARCHAR},
      </if>
      <if test="networkName != null">
        network_name = #{networkName,jdbcType=VARCHAR},
      </if>
      <if test="networkCode != null">
        network_code = #{networkCode,jdbcType=VARCHAR},
      </if>
      <if test="nodeInterfaceName != null">
        node_interface_name = #{nodeInterfaceName,jdbcType=VARCHAR},
      </if>
      <if test="blockConfirm != null">
        block_confirm = #{blockConfirm,jdbcType=BIGINT},
      </if>
      <if test="generateAddressNumber != null">
        generate_address_number = #{generateAddressNumber,jdbcType=BIGINT},
      </if>
      <if test="extend != null">
        extend = #{extend,jdbcType=VARCHAR},
      </if>
      <if test="extend2 != null">
        extend2 = #{extend2,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.cyberpay.crypto.model.CryptoNodeMapping">
    update crypto_node_mapping
    set crypto_symbol = #{cryptoSymbol,jdbcType=VARCHAR},
      crypto_type = #{cryptoType,jdbcType=VARCHAR},
      network_name = #{networkName,jdbcType=VARCHAR},
      network_code = #{networkCode,jdbcType=VARCHAR},
      node_interface_name = #{nodeInterfaceName,jdbcType=VARCHAR},
      block_confirm = #{blockConfirm,jdbcType=BIGINT},
      generate_address_number = #{generateAddressNumber,jdbcType=BIGINT},
      extend = #{extend,jdbcType=VARCHAR},
      extend2 = #{extend2,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findNodeMapping" resultMap="BaseResultMap">
    select
        <include refid="Base_Column_List"/>
    from crypto_node_mapping
    where
          crypto_symbol = #{symbol,jdbcType=VARCHAR} and  network_code = #{networkCode,jdbcType=VARCHAR}
  </select>
</mapper>